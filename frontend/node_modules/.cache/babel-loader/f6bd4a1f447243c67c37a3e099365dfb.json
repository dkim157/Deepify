{"ast":null,"code":"var _jsxFileName = \"/Users/justintran/csc307/react-assignment1/src/MyApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Table from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyApp() {\n  _s();\n\n  const [characters, setCharacters] = useState([{\n    name: 'Charlie',\n    job: 'Janitor' // the rest of the data\n\n  }, {\n    name: 'Mac',\n    job: 'Bouncer'\n  }, {\n    name: 'Dee',\n    job: 'Aspring actress'\n  }, {\n    name: 'Dennis',\n    job: 'Bartender'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      characterData: characters,\n      removeCharacter: removeOneCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"+8915XyugR6nGPHSx5OEo1ulcf8=\");\n\n_c = MyApp;\n\nfunction removeOneCharacter(index, characters, setCharacters) {\n  const updated = characters.filter((characters, i) => {\n    return i !== index;\n  });\n  setCharacters(updated);\n}\n\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/justintran/csc307/react-assignment1/src/MyApp.js"],"names":["React","useState","Table","MyApp","characters","setCharacters","name","job","removeOneCharacter","index","updated","filter","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,CACzC;AACEK,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,GAAG,EAAE,SAFP,CAGG;;AAHH,GADyC,EAMzC;AACED,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,GAAG,EAAE;AAFP,GANyC,EAUzC;AACED,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,GAAG,EAAE;AAFP,GAVyC,EAczC;AACED,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,GAAG,EAAE;AAFP,GAdyC,CAAD,CAA5C;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,aAAa,EAAEH,UAAtB;AAAkC,MAAA,eAAe,EAAEI;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA1BQL,K;;KAAAA,K;;AA4BT,SAASK,kBAAT,CAA6BC,KAA7B,EAAoCL,UAApC,EAAgDC,aAAhD,EAA+D;AAC7D,QAAMK,OAAO,GAAGN,UAAU,CAACO,MAAX,CAAkB,CAACP,UAAD,EAAaQ,CAAb,KAAmB;AACjD,WAAOA,CAAC,KAAKH,KAAb;AACD,GAFa,CAAhB;AAGEJ,EAAAA,aAAa,CAACK,OAAD,CAAb;AACD;;AAKH,eAAeP,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport Table from './Table'\n\nfunction MyApp() {\n  const [characters, setCharacters] = useState([\n      {\n        name: 'Charlie',\n        job: 'Janitor',\n         // the rest of the data\n      },\n      {\n        name: 'Mac',\n        job: 'Bouncer',\n      },\n      {\n        name: 'Dee',\n        job: 'Aspring actress',\n      },\n      {\n        name: 'Dennis',\n        job: 'Bartender',\n      },\n    ]);  \n  \n  return (\n    <div className=\"container\">\n      <Table characterData={characters} removeCharacter={removeOneCharacter} />\n    </div>\n  )\n}\n\nfunction removeOneCharacter (index, characters, setCharacters) {\n  const updated = characters.filter((characters, i) => {\n      return i !== index\n    });\n    setCharacters(updated);\n  }\n\n\n\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}