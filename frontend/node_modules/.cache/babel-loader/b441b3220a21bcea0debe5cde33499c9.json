{"ast":null,"code":"var _jsxFileName = \"/Users/justintran/csc307/react-assignment1/frontend/src/MyApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyApp() {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    fetchAll().then(result => {\n      if (result) setCharacters(result);\n    });\n  }, []);\n\n  async function removeOneCharacter(index) {\n    try {\n      id = characters[index].id;\n      const response = await axios.delete('http://localhost:5000/users/' + id);\n\n      if (response.status === 204) {\n        const updated = characters.filter((character, i) => {\n          return i !== index;\n        });\n        setCharacters(updated);\n      }\n\n      return response;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async function fetchAll() {\n    try {\n      const response = await axios.get('http://localhost:5000/users');\n      return response.data.users_list;\n    } catch (error) {\n      //We're not handling errors. Just logging into the console.\n      console.log(error);\n      return false;\n    }\n  }\n\n  async function makePostCall(person) {\n    try {\n      const response = await axios.post('http://localhost:5000/users', person);\n      return response;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  function updateList(person) {\n    makePostCall(person).then(result => {\n      if (result) setCharacters([...characters, person]);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      characterData: characters,\n      removeCharacter: removeOneCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleSubmit: updateList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/justintran/csc307/react-assignment1/frontend/src/MyApp.js"],"names":["React","useState","useEffect","Table","Form","axios","MyApp","characters","setCharacters","fetchAll","then","result","removeOneCharacter","index","id","response","delete","status","updated","filter","character","i","error","console","log","get","data","users_list","makePostCall","person","post","updateList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,GAAGC,IAAX,CAAiBC,MAAM,IAAI;AACzB,UAAIA,MAAJ,EACIH,aAAa,CAACG,MAAD,CAAb;AACL,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAQA,iBAAeC,kBAAf,CAAmCC,KAAnC,EAA0C;AACxC,QAAI;AACFC,MAAAA,EAAE,GAAGP,UAAU,CAACM,KAAD,CAAV,CAAkBC,EAAvB;AACA,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,MAAN,CAAa,iCAAiCF,EAA9C,CAAvB;;AACA,UAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAMC,OAAO,GAAGX,UAAU,CAACY,MAAX,CAAkB,CAACC,SAAD,EAAYC,CAAZ,KAAkB;AAClD,iBAAOA,CAAC,KAAKR,KAAb;AACD,SAFe,CAAhB;AAGAL,QAAAA,aAAa,CAACU,OAAD,CAAb;AACD;;AACD,aAAOH,QAAP;AACD,KAVD,CAWA,OAAOO,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACD;AACF;;AAID,iBAAeb,QAAf,GAAyB;AACvB,QAAI;AACD,YAAMM,QAAQ,GAAG,MAAMV,KAAK,CAACoB,GAAN,CAAU,6BAAV,CAAvB;AACA,aAAOV,QAAQ,CAACW,IAAT,CAAcC,UAArB;AACF,KAHD,CAIA,OAAOL,KAAP,EAAa;AACV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACF;AACF;;AAGD,iBAAeM,YAAf,CAA4BC,MAA5B,EAAmC;AACjC,QAAI;AACD,YAAMd,QAAQ,GAAG,MAAMV,KAAK,CAACyB,IAAN,CAAW,6BAAX,EAA0CD,MAA1C,CAAvB;AACA,aAAOd,QAAP;AACF,KAHD,CAIA,OAAOO,KAAP,EAAc;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACF;AACF;;AAED,WAASS,UAAT,CAAoBF,MAApB,EAA4B;AAC1BD,IAAAA,YAAY,CAACC,MAAD,CAAZ,CAAqBnB,IAArB,CAA2BC,MAAM,IAAI;AACrC,UAAIA,MAAJ,EACEH,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBsB,MAAhB,CAAD,CAAb;AACD,KAHD;AAID;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,aAAa,EAAEtB,UAAtB;AAAkC,MAAA,eAAe,EAAEK;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,YAAY,EAAEmB;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArEQzB,K;;KAAAA,K;AAwET,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Table from './Table'\nimport Form from './Form';\nimport axios from 'axios';\n\n\nfunction MyApp() {\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    fetchAll().then( result => {\n      if (result)\n          setCharacters(result);\n    });\n  }, [] );\n  \n  \n  async function removeOneCharacter (index) {\n    try {\n      id = characters[index].id\n      const response = await axios.delete('http://localhost:5000/users/' + id);\n      if (response.status === 204) {\n        const updated = characters.filter((character, i) => {\n          return i !== index\n        });\n        setCharacters(updated);\n      }\n      return response;\n    }\n    catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n\n\n  async function fetchAll(){\n    try {\n       const response = await axios.get('http://localhost:5000/users');\n       return response.data.users_list;     \n    }\n    catch (error){\n       //We're not handling errors. Just logging into the console.\n       console.log(error); \n       return false;         \n    }\n  }\n\n\n  async function makePostCall(person){\n    try {\n       const response = await axios.post('http://localhost:5000/users', person);\n       return response;\n    }\n    catch (error) {\n       console.log(error);\n       return false;\n    }\n  }\n\n  function updateList(person) { \n    makePostCall(person).then( result => {\n    if (result)\n      setCharacters([...characters, person] );\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <Table characterData={characters} removeCharacter={removeOneCharacter} />\n      <Form handleSubmit={updateList} />\n    </div>\n  )\n\n}\n\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}